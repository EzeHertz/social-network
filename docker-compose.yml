services:
  postgres:
    image: postgres:16
    container_name: sn_postgres
    environment:
      POSTGRES_USER: sn
      POSTGRES_PASSWORD: sn
      POSTGRES_DB: socialnetwork
      TZ: UTC
    ports:
      - "55432:5432"
    volumes:
      - sn_postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: sn_redis
    ports:
      - "6379:6379"
    volumes:
      - sn_redis_data:/data

  app:
    build: .
    container_name: app
    depends_on:
      - postgres
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/socialnetwork
      SPRING_DATASOURCE_USERNAME: sn
      SPRING_DATASOURCE_PASSWORD: sn
      SPRING_REDIS_HOST: redis
      MANAGEMENT_SERVER_PORT: 8081
    ports:
      - "8080:8080"
      - "8081:8081"

  prometheus:
    build:
      context: ./ops
      dockerfile: Dockerfile.prometheus
    container_name: sn_prometheus
    ports:
      - "9090:9090"
    depends_on:
      - app

  grafana:
    image: grafana/grafana:latest
    container_name: sn_grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
    volumes:
      # Montás las carpetas de provisioning (YAML) en /etc/grafana/provisioning
      - ./ops/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./ops/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      # Montás los JSON en una ruta separada
      - ./ops/grafana/dashboards:/var/lib/grafana/dashboards:ro

volumes:
  sn_postgres_data:
  sn_redis_data:
